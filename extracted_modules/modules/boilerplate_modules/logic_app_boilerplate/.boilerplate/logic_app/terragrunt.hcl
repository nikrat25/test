
# This is a Terragrunt module generated by boilerplate.
terraform {
  source = "${include.envcommon.locals.base_source_url_github}//logic_app?ref=${include.envcommon.locals.logic_app_version}"
}

include "root" {
  path   = find_in_parent_folders("root.hcl")
  expose = true
}

include "envcommon" {
  path   = "${dirname(find_in_parent_folders("root.hcl"))}/_envcommon/pdap.hcl"
  expose = true
}

dependency "entra_lookup" {
  config_path = "../entra_lookup"
}

dependency "lookup" {
  config_path = "../../../lookup"
}

dependency "product" {
  config_path = "../product"
}

dependency "solutionsettings" {
  config_path = "../solutionsettings"
}

{{if .enable_app_insights}}
dependency "log_analytics" {
  config_path = "../log_analytics"
}
{{end}}

dependencies {
  paths = ["../resource_group"]
}

inputs = {
  # --------------------------------------------------------------------------------------------------------------------
  # Required input variables
  # --------------------------------------------------------------------------------------------------------------------

  # Description: (variable solution_settings did not define a description)
  # Type: any
  solution_settings = dependency.solutionsettings.outputs.settings

  # Description: A mapping of tags to assign to the resource.
  # Type: map
  tags = dependency.solutionsettings.outputs.tags

  # Description: Existing storage account name
  # Type: string
  storage_account_name = "${include.root.locals.banner}generalsa${include.root.locals.region}${include.root.locals.environment}"

  # Description: Resource Group Name for the Storage Account
  # Type: string
  storage_account_resource_group = upper("${include.root.locals.banner}-storage-${include.root.locals.region}-${include.root.locals.environment}-rg")

  # Description: Private DNS zone name
  # Type: string
  dns_zone_name = "privatelink.azurewebsites.net"

  # --------------------------------------------------------------------------------------------------------------------
  # Optional input variables
  # Uncomment the ones you wish to set
  # --------------------------------------------------------------------------------------------------------------------
  # Description: Logicapp Runtime can be node or dotnet
  # Type: string
  {{if .logic_app_version}}
  logic_app_version = "{{.logic_app_version}}"
  {{else}}
  # logic_app_version = "~3"
  {{end}}

  # Description: Existing app service plan name
  # Type: string
  {{if .app_service_plan_name}}
  app_service_plan_name = "{{.app_service_plan_name}}"
  {{else}}
  # app_service_plan_name = ""
  {{end}}

  # Description: Existing app service plan rg name
  # Type: string
  {{if .app_service_plan_rg}}
  app_service_plan_rg = "{{.app_service_plan_rg}}"
  {{else}}
  # app_service_plan_rg = ""
  {{end}}

  # Description: The ID of the subnet the app service will be associated to (the subnet must have a service_delegation configured for Microsoft.Web/serverFarms)
  # Type: string
  {{if .integration_subnet_name}}
  integration_subnet_name = "{{.integration_subnet_name}}"
  {{else}}
  # integration_subnet_name = "appsnet-001"
  {{end}}

  # Description: The ID of the subnet the app service will be associated to (the subnet must be configured for Microsoft.Web)
  # Type: string
  {{if .app_service_private_endpoint_subnet_name}}
  app_service_private_endpoint_subnet_name = "{{.app_service_private_endpoint_subnet_name}}"
  {{else}}
  # app_service_private_endpoint_subnet_name = "appsnet-002"
  {{end}}

  # Description: The ID of the subnet the app service will be associated to (the subnet must have a service_delegation configured for Microsoft.Web/serverFarms)
  # Type: string
  {{if .storage_account_private_endpoint_subnet_name}}
  storage_account_private_endpoint_subnet_name = "{{.storage_account_private_endpoint_subnet_name}}"
  {{else}}
  # storage_account_private_endpoint_subnet_name = "sapesnet-001"
  {{end}}

  # Description: Name of the logic app if different from the default
  # Type: string
  {{if .logic_app_name}}
  logic_app_name = "{{.logic_app_name}}"
  {{else}}
  # logic_app_name = ""
  {{end}}

  # Description: the id of the log analytics to integrate with, use the log analytics module to get this result.
  # Type: string
  {{if .enable_app_insights}}
  log_analytics_workspace_id = dependency.log_analytics.outputs.log_id
  {{else}}
  # log_analytics_workspace_id = ""
  {{end}}

  # Description: Flag to enable application insights. Supported for Function apps only.
  # Type: bool
  {{if .enable_app_insights}}
  enable_app_insights = true
  {{else}}
  # enable_app_insights = false
  {{end}}
}
