
# This is a Terragrunt module generated by boilerplate.
terraform {
  source = "${include.envcommon.locals.base_source_url_github}//logic_app?ref=${include.envcommon.locals.sql_srv_version}"
}

include "root" {
  path   = find_in_parent_folders("root.hcl")
  expose = true
}

include "envcommon" {
  path   = "${dirname(find_in_parent_folders("root.hcl"))}/_envcommon/pdap.hcl"
  expose = true
}

dependency "entra_lookup" {
  config_path = "../entra_lookup"
}

dependency "lookup" {
  config_path = "../../../lookup"
}

dependency "product" {
  config_path = "../product"
}

dependency "solutionsettings" {
  config_path = "../solutionsettings"
}

dependency "log_analytics" {
  config_path = "../log_analytics"
}

dependencies {
  paths = ["../resource_group"]
}

inputs = {
  # --------------------------------------------------------------------------------------------------------------------
  # Required input variables
  # --------------------------------------------------------------------------------------------------------------------

  # Description: (variable solution_settings did not define a description)
  # Type: any
  solution_settings = dependency.solutionsettings.outputs.settings 

  # Description: (variable tags did not define a description)
  # Type: map
  tags = dependency.solutionsettings.outputs.tags 

  # Description: the id of the keyvault to integrate with, use the keyvault module to get this result.
  # Type: string
  key_vault_id = dependency.product.outputs.key_vault_id

  # Description: the id of the log analytics to integrate with, use the log analytics module to get this result.
  # Type: string
  log_analytics_id = dependency.log_analytics.outputs.log_id

  # Description: Resource group name for this module
  # Type: string
  sql-server-rg = upper("${include.root.locals.banner}-storage-${include.root.locals.region}-${include.root.locals.environment}-rg")
  
  # Description: Optional variable to override the name of the database name.  Only use for existing instances that are named incorrectly otherwise take the default
  # Type: string
  sql_database_name = "{{.sql_database_name }}"

  # Description: Map of Azure AD group names to list of roles for the SQL database. Must pass in 'server_name' variable.
  # Type: map
  group_roles_map = {
    WRITER  = ["db_datareader", "db_datawriter", "db_ddladmin"]
    READER  = ["db_datareader"]
    ADMIN   = ["db_accessadmin"]
    SERVICE = ["db_owner"]
  }

  # Description: SQL Server name
  # Type: string
  server_name = "${include.root.locals.banner}storag${include.root.locals.region}${include.root.locals.environment}sqls"

  # --------------------------------------------------------------------------------------------------------------------
  # Optional input variables
  # Uncomment the ones you wish to set
  # --------------------------------------------------------------------------------------------------------------------

  # Description: The maximum size of the db in gigbytes, defaults to 64GB
  # Type: number
  {{if .max_size_gb}}
  max_size_gb = {{.max_size_gb}}
  {{else}}
  # max_size_gb = "64"
  {{end}}

  # Description: The minium number of cores for the db, only relevant for serverless edition 
  # Type: number
  {{if .min_capacity}}
  min_capacity = {{.min_capacity}}
  {{else}}
  # min_capacity = "0.5"
  {{end}}

  # Description: The number of minutes before the db should auto pause if edition is serverless
  # Type: number
  {{if .auto_pause_delay_in_minutes}}
  auto_pause_delay_in_minutes = {{.auto_pause_delay_in_minutes}}
  {{else}}
  # auto_pause_delay_in_minutes = "60"
  {{end}}

  # Description: The type of database you require, default is a Gen 5 serverless 4 max core 
  # Type: string
  {{if .sku}}
  sku = "{{.sku}}"
  {{else}}
  # sku = "GP_S_Gen5_4"
  {{end}}

  # Description: If set to true, application and secret will be stored in keyvault
  # Type: bool
  {{if .key_vault_is_required}}
  # key_vault_is_required = true
  {{else}}
  key_vault_is_required = false
  {{end}}

  # Description: Specifies the storage account type used to store backups for this database. Possible values are Geo, Local and Zone.
  # Type: string
  {{if .storage_account_type}}
  storage_account_type = "{{.storage_account_type}}"
  {{else}}
  # storage_account_type = "Geo"
  {{end}}

  # Description: The number of days before a secret, key, or certificate is set to expire
  # Type: number
  {{if .days_to_expire}}
  days_to_expire = {{.days_to_expire}}
  {{else}}
  # days_to_expire = 365
  {{end}}

}
